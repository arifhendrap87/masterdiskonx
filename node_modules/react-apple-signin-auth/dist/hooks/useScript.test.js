"use strict";

var _reactHooks = require("@testing-library/react-hooks");

var _useScript = _interopRequireDefault(require("./useScript"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('useScript', function () {
  beforeEach(function () {
    var html = document.querySelector('html');

    if (html) {
      html.innerHTML = '';
    }
  });
  it('should handle null src and not append a script tag', function () {
    expect(document.querySelectorAll('script').length).toBe(0);
    (0, _reactHooks.renderHook)(function () {
      return (0, _useScript.default)(null);
    });
    expect(document.querySelectorAll('script').length).toBe(0);
  });
  it('should append the script when available', function () {
    expect(document.querySelectorAll('script').length).toBe(0);
    (0, _reactHooks.renderHook)(function () {
      return (0, _useScript.default)('https://script.com');
    });
    expect(document.querySelectorAll('script').length).toBe(1);
  });
  it('should append the script when available', function () {
    expect(document.querySelectorAll('script').length).toBe(0);
    (0, _reactHooks.renderHook)(function () {
      return (0, _useScript.default)('https://script.com');
    });
    expect(document.querySelectorAll('script').length).toBe(1);
  });
  it('should render a script only once', function () {
    expect(document.querySelectorAll('script').length).toBe(0);
    var previousScript = document.createElement('script');
    previousScript.src = 'http://script.com';
    document.body.appendChild(previousScript);
    expect(document.querySelectorAll('script').length).toBe(1);
    var handle = (0, _reactHooks.renderHook)(function (p) {
      return (0, _useScript.default)(p);
    }, {
      initialProps: 'http://script.com'
    });
    expect(document.querySelectorAll('script').length).toBe(1);
    handle.rerender();
    expect(document.querySelectorAll('script').length).toBe(1);
  });
});